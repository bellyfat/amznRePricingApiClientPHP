<?php
/**
 * PriceGapDTOTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  eSagu\Amzn\RePricing\V1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * eSagu amzn RePricing API
 *
 * eSagu API to reprice items on amazon.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace eSagu\Amzn\RePricing\V1;

/**
 * PriceGapDTOTest Class Doc Comment
 *
 * @category    Class */
// * @description A single price gap rule. The gap defined the amount and can be negative for underbidding or positive for overbidding.The mode defined hwo the gap should be calculated if ABSOLUTE is set, the gap gets used without any calculation. If the mode is PERCENTAGE the competitors offers price will be used with or without shipping costs as base for the percentage gap calculation.The sellerId and fulfillmentType are optional and can be sued in combination, too. The name must be unique.
/**
 * @package     eSagu\Amzn\RePricing\V1
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PriceGapDTOTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "PriceGapDTO"
     */
    public function testPriceGapDTO()
    {

    }

    /**
     * Test attribute "fulfillment_type"
     */
    public function testPropertyFulfillmentType()
    {

    }

    /**
     * Test attribute "gap"
     */
    public function testPropertyGap()
    {

    }

    /**
     * Test attribute "mode"
     */
    public function testPropertyMode()
    {

    }

    /**
     * Test attribute "seller_id"
     */
    public function testPropertySellerId()
    {

    }

}
