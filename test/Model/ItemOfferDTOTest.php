<?php
/**
 * ItemOfferDTOTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  eSagu\Amzn\RePricing\V1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * eSagu amzn RePricing API
 *
 * eSagu API to reprice items on amazon.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace eSagu\Amzn\RePricing\V1;

/**
 * ItemOfferDTOTest Class Doc Comment
 *
 * @category    Class */
// * @description A offer on amzn. An offer contains information about an offer on a item. The exclusion reasons are computed by the item&#39;Äs exclusion criteria. The gap is computed by the item&#39;s price gap. The the comparedTo flag marks the offer which was used as repricing target.
/**
 * @package     eSagu\Amzn\RePricing\V1
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ItemOfferDTOTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "ItemOfferDTO"
     */
    public function testItemOfferDTO()
    {

    }

    /**
     * Test attribute "compared_to"
     */
    public function testPropertyComparedTo()
    {

    }

    /**
     * Test attribute "exclusion_reasons"
     */
    public function testPropertyExclusionReasons()
    {

    }

    /**
     * Test attribute "feedback_count"
     */
    public function testPropertyFeedbackCount()
    {

    }

    /**
     * Test attribute "flags"
     */
    public function testPropertyFlags()
    {

    }

    /**
     * Test attribute "item_condition"
     */
    public function testPropertyItemCondition()
    {

    }

    /**
     * Test attribute "listing_price"
     */
    public function testPropertyListingPrice()
    {

    }

    /**
     * Test attribute "price_gap"
     */
    public function testPropertyPriceGap()
    {

    }

    /**
     * Test attribute "seller_id"
     */
    public function testPropertySellerId()
    {

    }

    /**
     * Test attribute "seller_positive_feedback_rating"
     */
    public function testPropertySellerPositiveFeedbackRating()
    {

    }

    /**
     * Test attribute "shipping"
     */
    public function testPropertyShipping()
    {

    }

    /**
     * Test attribute "shipping_time"
     */
    public function testPropertyShippingTime()
    {

    }

    /**
     * Test attribute "ships_from"
     */
    public function testPropertyShipsFrom()
    {

    }

}
